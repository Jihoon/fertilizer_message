getwd()
raw.trade.FAO <- read.csv('Comtrade\N fertil trade - FAOSTAT_data_9-25-2019.csv')
raw.trade.FAO <- read.csv('\Comtrade\N fertil trade - FAOSTAT_data_9-25-2019.csv')
raw.trade.FAO <- read.csv('/Comtrade/N fertil trade - FAOSTAT_data_9-25-2019.csv')
raw.trade.FAO <- read.csv('./Comtrade/N fertil trade - FAOSTAT_data_9-25-2019.csv')
raw.trade.FAO <- read.csv('.\Comtrade\N fertil trade - FAOSTAT_data_9-25-2019.csv')
raw.trade.FAO <- read.csv('../Comtrade/N fertil trade - FAOSTAT_data_9-25-2019.csv')
raw.mapping <- read_xlsx('MESSAGE_region_mapping_R14.xlsx')
raw.mapping <- read_xlsx('../MESSAGE_region_mapping_R14.xlsx')
??read_xlsx
library(readxl)
raw.mapping <- read_xlsx('../MESSAGE_region_mapping_R14.xlsx')
View(raw.mapping)
View(raw.mapping)
library(countrycode)
View(raw.trade.FAO)
View(raw.trade.FAO)
library(countrycode)
rea?countrycode
countrycode
?countrycode
trade.FAO <- raw.trade.FAO %>% mutate(COUNTRY = countrycode(Area, , 'country.name', 'iso3c'))
library(tidyverse)
trade.FAO <- raw.trade.FAO %>% mutate(COUNTRY = countrycode(Area, , 'country.name', 'iso3c'))
trade.FAO <- raw.trade.FAO %>% mutate(COUNTRY = countrycode(Area, 'country.name', 'iso3c'))
unique(raw.trade.FAO$Area)
View(trade.FAO)
View(trade.FAO)
?case_when
mutate_cond <- function(.data, condition, ..., envir = parent.frame()) {
condition <- eval(substitute(condition), .data, envir)
.data[condition, ] <- .data[condition, ] %>% mutate(...)
.data
}
trade.FAO <- raw.trade.FAO %>% mutate(ISO = countrycode(Area, 'country.name', 'iso3c')) %>%
mutate_cond(Area=='Serbia and Montenegro', ISO="SRB") %>% # Will be EEU in the end. So either SRB or MNE
left_join(raw.mapping)
?summarise
trade.FAO.reg <- trade.FAO %>% group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value))
View(trade.FAO.reg)
View(trade.FAO.reg)
trade.FAO.reg <- trade.FAO %>% group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value)) %>%
filter(!is.na(msgregion))
trade.FAO.R11 <- trade.FAO %>% mutate_cond(msgregion %in% c('RUS', 'CAS', 'SCS', 'UBM'), msgregion="FSU") %>%
group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value)) %>%
filter(!is.na(msgregion))
trade.FAO.R14 <- trade.FAO %>% group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value)) %>%
filter(!is.na(msgregion))
rm(trade.FAO.reg)
View(trade.FAO.R11)
View(trade.FAO.R11)
trade.FAO.R14 <- trade.FAO %>% group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value), Unit=first(Unit)) %>%
filter(!is.na(msgregion))
trade.FAO.R11 <- trade.FAO %>% mutate_cond(msgregion %in% c('RUS', 'CAS', 'SCS', 'UBM'), msgregion="FSU") %>%
group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value), Unit=first(Unit)) %>%
filter(!is.na(msgregion))
write.csv(trade.FAO.R11, '../trade.FAO.R11.csv')
write.csv(trade.FAO.R14, '../trade.FAO.R14.csv')
?grep
trade.FAO <- raw.trade.FAO %>% mutate(ISO = countrycode(Area, 'country.name', 'iso3c')) %>%
mutate_cond(Area=='Serbia and Montenegro', ISO="SRB") %>% # Will be EEU in the end. So either SRB or MNE
left_join(raw.mapping) %>%
mutate(Element=gsub(' Quantity', '', Element))
trade.FAO.R14 <- trade.FAO %>% group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value), Unit=first(Unit)) %>%
filter(!is.na(msgregion))
trade.FAO.R11 <- trade.FAO %>% mutate_cond(msgregion %in% c('RUS', 'CAS', 'SCS', 'UBM'), msgregion="FSU") %>%
group_by(msgregion, Element, Year) %>% summarise(Value=sum(Value), Unit=first(Unit)) %>%
filter(!is.na(msgregion))
write.csv(trade.FAO.R11, '../trade.FAO.R11.csv')
write.csv(trade.FAO.R14, '../trade.FAO.R14.csv')
